# Generated by Django 5.2.4 on 2025-08-08 16:19

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('artists', '0004_remove_artistmodel_unique_artist_source_per_type_and_more'),
        ('songs', '0005_remove_songmodel_songs_album_t_6c7985_idx_and_more'),
        ('user_profile', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='StatisticsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Estadística',
                'verbose_name_plural': 'Estadísticas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserFavoriteArtistModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('added_at', models.DateTimeField(default=django.utils.timezone.now, help_text='Fecha cuando se agregó a favoritos')),
                ('artist', models.ForeignKey(help_text='Artista favorito', on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by', to='artists.artistmodel')),
                ('user', models.ForeignKey(help_text='Usuario', on_delete=django.db.models.deletion.CASCADE, related_name='favorite_artists', to='user_profile.userprofilemodel')),
            ],
            options={
                'verbose_name': 'Artista Favorito',
                'verbose_name_plural': 'Artistas Favoritos',
                'db_table': 'user_favorite_artists',
                'ordering': ['-added_at'],
                'indexes': [models.Index(fields=['user', 'added_at'], name='user_favori_user_id_248118_idx'), models.Index(fields=['artist', 'added_at'], name='user_favori_artist__47fe10_idx')],
                'constraints': [models.UniqueConstraint(fields=('user', 'artist'), name='unique_user_favorite_artist')],
            },
        ),
        migrations.CreateModel(
            name='UserFavoriteSongModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('added_at', models.DateTimeField(default=django.utils.timezone.now, help_text='Fecha cuando se agregó a favoritos')),
                ('song', models.ForeignKey(help_text='Canción favorita', on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by', to='songs.songmodel')),
                ('user', models.ForeignKey(help_text='Usuario', on_delete=django.db.models.deletion.CASCADE, related_name='favorite_songs', to='user_profile.userprofilemodel')),
            ],
            options={
                'verbose_name': 'Canción Favorita',
                'verbose_name_plural': 'Canciones Favoritas',
                'db_table': 'user_favorite_songs',
                'ordering': ['-added_at'],
                'indexes': [models.Index(fields=['user', 'added_at'], name='user_favori_user_id_9935aa_idx'), models.Index(fields=['song', 'added_at'], name='user_favori_song_id_6806a5_idx')],
                'constraints': [models.UniqueConstraint(fields=('user', 'song'), name='unique_user_favorite_song')],
            },
        ),
        migrations.CreateModel(
            name='UserListeningSessionModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('started_at', models.DateTimeField(default=django.utils.timezone.now, help_text='Inicio de la sesión')),
                ('ended_at', models.DateTimeField(blank=True, help_text='Final de la sesión', null=True)),
                ('songs_played', models.PositiveIntegerField(default=0, help_text='Canciones reproducidas en esta sesión')),
                ('total_duration', models.PositiveIntegerField(default=0, help_text='Duración total de la sesión en segundos')),
                ('device_type', models.CharField(choices=[('web', 'Web'), ('mobile', 'Móvil'), ('desktop', 'Escritorio'), ('tablet', 'Tablet')], default='web', max_length=20)),
                ('user', models.ForeignKey(help_text='Usuario', on_delete=django.db.models.deletion.CASCADE, related_name='listening_sessions', to='user_profile.userprofilemodel')),
            ],
            options={
                'verbose_name': 'Sesión de Escucha',
                'verbose_name_plural': 'Sesiones de Escucha',
                'db_table': 'user_listening_sessions',
                'ordering': ['-started_at'],
                'indexes': [models.Index(fields=['user', 'started_at'], name='user_listen_user_id_1072db_idx'), models.Index(fields=['started_at'], name='user_listen_started_ec4edb_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserPlayHistoryModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('played_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, help_text='Fecha y hora de reproducción')),
                ('duration_played', models.PositiveIntegerField(help_text='Duración reproducida en segundos')),
                ('completed', models.BooleanField(default=False, help_text='Si la canción se reprodujo completamente')),
                ('source', models.CharField(choices=[('playlist', 'Playlist'), ('album', 'Álbum'), ('search', 'Búsqueda'), ('recommendation', 'Recomendación'), ('shuffle', 'Aleatorio'), ('direct', 'Directo')], default='direct', help_text='Fuente de la reproducción', max_length=50)),
                ('device_type', models.CharField(choices=[('web', 'Web'), ('mobile', 'Móvil'), ('desktop', 'Escritorio'), ('tablet', 'Tablet')], default='web', help_text='Tipo de dispositivo usado', max_length=20)),
                ('song', models.ForeignKey(help_text='Canción reproducida', on_delete=django.db.models.deletion.CASCADE, related_name='play_history', to='songs.songmodel')),
                ('user', models.ForeignKey(help_text='Usuario que reprodujo la canción', on_delete=django.db.models.deletion.CASCADE, related_name='play_history', to='user_profile.userprofilemodel')),
            ],
            options={
                'verbose_name': 'Historial de Reproducción',
                'verbose_name_plural': 'Historial de Reproducciones',
                'db_table': 'user_play_history',
                'ordering': ['-played_at'],
                'indexes': [models.Index(fields=['user', 'played_at'], name='user_play_h_user_id_584772_idx'), models.Index(fields=['song', 'played_at'], name='user_play_h_song_id_0be023_idx'), models.Index(fields=['played_at'], name='user_play_h_played__def115_idx'), models.Index(fields=['user', 'song'], name='user_play_h_user_id_5cd41a_idx')],
            },
        ),
    ]
