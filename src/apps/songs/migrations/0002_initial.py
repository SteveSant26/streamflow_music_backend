# Generated by Django 5.2.4 on 2025-08-01 04:18

import uuid

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("songs", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="SongModel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("album_id", models.UUIDField(blank=True, db_index=True, null=True)),
                ("artist_id", models.UUIDField(blank=True, db_index=True, null=True)),
                ("genre_id", models.UUIDField(blank=True, db_index=True, null=True)),
                (
                    "album_title",
                    models.CharField(
                        blank=True, db_index=True, max_length=255, null=True
                    ),
                ),
                (
                    "artist_name",
                    models.CharField(
                        blank=True, db_index=True, max_length=255, null=True
                    ),
                ),
                (
                    "genre_name",
                    models.CharField(
                        blank=True, db_index=True, max_length=100, null=True
                    ),
                ),
                (
                    "duration_seconds",
                    models.IntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(86400),
                        ],
                    ),
                ),
                ("track_number", models.PositiveIntegerField(blank=True, null=True)),
                ("file_url", models.URLField(blank=True, max_length=500, null=True)),
                (
                    "thumbnail_url",
                    models.URLField(blank=True, max_length=500, null=True),
                ),
                ("lyrics", models.TextField(blank=True, null=True)),
                ("tags", models.JSONField(blank=True, default=list)),
                ("play_count", models.PositiveIntegerField(db_index=True, default=0)),
                ("favorite_count", models.PositiveIntegerField(default=0)),
                ("download_count", models.PositiveIntegerField(default=0)),
                (
                    "source_type",
                    models.CharField(
                        choices=[
                            ("youtube", "YouTube"),
                            ("upload", "Subida directa"),
                            ("spotify", "Spotify"),
                            ("soundcloud", "SoundCloud"),
                        ],
                        default="youtube",
                        max_length=20,
                    ),
                ),
                (
                    "source_id",
                    models.CharField(
                        blank=True, db_index=True, max_length=100, null=True
                    ),
                ),
                ("source_url", models.URLField(blank=True, max_length=500, null=True)),
                ("is_explicit", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(db_index=True, default=True)),
                ("is_premium", models.BooleanField(default=False)),
                (
                    "audio_quality",
                    models.CharField(
                        choices=[
                            ("standard", "Estándar (128kbps)"),
                            ("high", "Alta (320kbps)"),
                            ("lossless", "Sin pérdida (FLAC)"),
                        ],
                        default="standard",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_played_at", models.DateTimeField(blank=True, null=True)),
                ("release_date", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "songs",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["source_type", "source_id"],
                        name="songs_source__6e5cf8_idx",
                    ),
                    models.Index(
                        fields=["artist_name", "play_count"],
                        name="songs_artist__30c12a_idx",
                    ),
                    models.Index(
                        fields=["album_title", "track_number"],
                        name="songs_album_t_6c7985_idx",
                    ),
                    models.Index(
                        fields=["genre_name", "play_count"],
                        name="songs_genre_n_15f23c_idx",
                    ),
                    models.Index(
                        fields=["is_active", "created_at"],
                        name="songs_is_acti_683258_idx",
                    ),
                    models.Index(fields=["play_count"], name="songs_most_played_idx"),
                    models.Index(
                        fields=["favorite_count"], name="songs_most_favorited_idx"
                    ),
                    models.Index(
                        fields=["last_played_at"], name="songs_recently_played_idx"
                    ),
                ],
                "constraints": [
                    models.UniqueConstraint(
                        condition=models.Q(("source_id__isnull", False)),
                        fields=("source_type", "source_id"),
                        name="unique_source_per_type",
                    )
                ],
            },
        ),
    ]
