# üîß PRE-COMMIT HOOKS PARA STREAMFLOW MUSIC BACKEND
# Mantiene la calidad del c√≥digo autom√°ticamente antes de cada commit
repos:
  # üßπ Elimina imports no usados AUTOM√ÅTICAMENTE
  - repo: https://github.com/PyCQA/autoflake
    rev: v2.3.1
    hooks:
      - id: autoflake
        args:
          - --in-place
          - --remove-all-unused-imports
          - --remove-unused-variables
          - --ignore-init-module-imports
        exclude: ^(test/|tests/|.*test.*\.py$|migrations/)

  # üé® Formateo de c√≥digo con Black
  - repo: https://github.com/psf/black
    rev: 24.4.2
    hooks:
      - id: black
        args: [--line-length=88, --target-version=py38]
        language_version: python3
        exclude: ^(test/|tests/|.*test.*\.py$|migrations/)

  # üìö Ordenamiento de imports con isort
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --multi-line=3, --line-length=88]
        exclude: ^(test/|tests/|.*test.*\.py$|migrations/)

  # üîç Linting con Flake8
  - repo: https://github.com/pycqa/flake8
    rev: 7.1.0
    hooks:
      - id: flake8
        args:
          - --max-line-length=88
          - --extend-ignore=E203,W503,E501
          - --exclude=migrations,__pycache__,.venv,env
        exclude: ^(test/|tests/|.*test.*\.py$|migrations/|config/settings/)

  # ‚ö° Tipado est√°tico con MyPy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.10.1
    hooks:
      - id: mypy
        additional_dependencies:
          - types-requests
          - types-ujson
          - types-aiofiles
          - django-stubs[compatible-mypy]
        args:
          - --ignore-missing-imports
          - --explicit-package-bases
          - --no-strict-optional
          - --warn-unreachable
          - --disable-error-code=assignment
          - --disable-error-code=var-annotated
          - --disable-error-code=unreachable
          - --disable-error-code=call-arg
          - --disable-error-code=arg-type
        exclude: ^(test/|tests/|.*test.*\.py$|migrations/|manage\.py)

  # üõ°Ô∏è Seguridad con Bandit
  - repo: https://github.com/PyCQA/bandit
    rev: '1.7.9'
    hooks:
      - id: bandit
        args: ['--skip', 'B101,B601,B602,B404']
        exclude: '(test_|_test\.py$|tests\.py$|migrations/|config/settings/|format_code\.py|make_commit\.py|generate_.*\.py)'

  # üß™ Ejecutar tests de m√≥dulos funcionales
  - repo: local
    hooks:
      - id: run-working-tests
        name: Run working tests (user_profile & albums)
        entry: python run_precommit_tests_safe.py
        language: system
        stages: [pre-commit]
        pass_filenames: false
        always_run: true

  # üìù Formato de mensajes de commit
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.28.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # üß∞ Hooks generales de calidad
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
        exclude: ^(test/|tests/|.*test.*\.py$|migrations/)
      - id: end-of-file-fixer
        exclude: ^(test/|tests/|.*test.*\.py$|migrations/)
      - id: check-yaml
        args: [--unsafe]
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-json
      - id: check-merge-conflict
      - id: debug-statements
        exclude: ^(test/|tests/|.*test.*\.py$|migrations/)
      - id: check-docstring-first
        exclude: ^(test/|tests/|.*test.*\.py$|migrations/)
      - id: check-case-conflict
      - id: mixed-line-ending
        args: [--fix=lf]
