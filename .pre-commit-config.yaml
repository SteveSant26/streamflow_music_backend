repos:
  # Elimina imports y variables no usados automáticamente
  - repo: https://github.com/PyCQA/autoflake
    rev: v2.2.1
    hooks:
      - id: autoflake
        args:
          - --in-place
          - --remove-all-unused-imports
          - --ignore-init-module-imports
        exclude: '(^test/|test_.*\.py$)'

  # Formatea el código Python siguiendo el estilo Black
  - repo: https://github.com/psf/black
    rev: 23.11.0
    hooks:
      - id: black
        args: [--line-length=88]
        language_version: python3.13
        exclude: '(^test/|test_.*\.py$)'

  # Ordena los imports automáticamente según el perfil de Black
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: [--profile=black]
        exclude: '(^test/|test_.*\.py$)'

  # Linter para detectar errores de estilo y posibles bugs en Python
  - repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        args: [--max-line-length=150, --extend-ignore=E203]
        exclude: '(__init__\.py$|^src/apps/.*/migrations/|^test/|test_.*\.py$)'

  # Verifica tipos estáticos en Python usando mypy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.7.1
    hooks:
      - id: mypy
        additional_dependencies:
          - types-requests
          - types-ujson
          - types-aiofiles
        args:
          - --ignore-missing-imports
          - --explicit-package-bases
        exclude: '(^src/apps/.*/migrations/|^test/|test_.*\.py$)'

  # Analiza el código en busca de vulnerabilidades de seguridad
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ["-s", "B101", "-x", "test/", "--format", "json"]
        exclude: |
          (?x)(
            ^test/
            |^migrations/
            |^\.venv/
            |^src/apps/.*/migrations/
          )

  # Verifica que los mensajes de commit sigan el estándar de Conventional Commits
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # Hooks generales para mantener la calidad y consistencia de archivos
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: '(^test/|test_.*\.py$)'
      - id: end-of-file-fixer
        exclude: '(^test/|test_.*\.py$)'
      - id: check-yaml
      - id: check-added-large-files
      - id: check-json
      - id: check-merge-conflict
      - id: debug-statements
        exclude: '(^test/|test_.*\.py$)'
